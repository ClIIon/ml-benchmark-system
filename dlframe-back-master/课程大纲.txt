课程大纲

课程名称：机器学习理论与实践

课程时长：14天课程时间 + 30天大作业时间

课程目标：本课程旨在让学生熟练掌握机器学习的经典算法，并通过Python和VUE框架实现一个网页可视化界面，展示各种算法在经典数据集上的性能。

课程内容：
1. 机器学习基本概念与理论
2. Python编程基础
3. VUE框架和前端技术概述
4. 决策树算法原理与实现
5. 支持向量机算法原理与实现
6. 神经网络算法原理与实现
7. 其他经典算法介绍及实现
8. 数据集介绍（如iris、西瓜等）
9. 算法性能评估与比较
10. 网页可视化界面设计与实现
11. 项目实践与案例分析
12. 大作业指导与答疑

大作业：
学生需在30天内，结合所学知识，实现一个网页可视化界面，收录决策树、支持向量机、神经网络等经典算法，并验证各种算法在iris、西瓜等经典数据集上的性能。大作业完成后，将进行评估与答辩。

课程特点：
本课程注重理论与实践相结合，帮助学生全面掌握机器学习知识，提高编程与项目实践能力。通过大作业的实践，学生能够深入了解各种算法在实际问题中的应用，并培养解决问题的能力。

技术简介：
综述：本课程推荐使用 python 作为主要语言进行算法编写（推荐自行实现算法，但也可使用 Scikit-learn 库），并作为后端服务，为前端网页提供数据；推荐使用 VUE 框架编写前端，进行效果展示；推荐使用 websocket 进行前后端通信。

Vue.js（简称Vue）是一款用于构建用户界面的渐进式JavaScript框架。Vue的核心库主要关注视图层，易于与其他库或现有项目集成。Vue通过简洁的模板语法和组件化的开发方式，让前端开发更加高效和灵活。Vue.js还提供了许多高级功能，如响应式数据绑定、计算属性、指令、过滤器等，有助于构建可维护和可扩展的前端应用。

Vue.js 文档及官网参见：https://vuejs.org
Vue 学习路径推荐：
1. HTML + css: 
	1. 学习网址: https://www.runoob.com/html/html-tutorial.html
	2. B站: BV1XJ411X7Ud
	3. 重点学习语法、DOM、BOM等
2. javascript: 
	1. 学习网址: https://www.runoob.com/js/js-tutorial.html
	2. 重点学习语法
3. nodejs & npm: 
	1. B站: BV1a34y167AZ
	2. 重点理解nodejs与浏览器中js执行器的异同
	3. 重点学习webpack的import、export等 
	4. 学习npm的作用 & package.json中常用关键字的含义
4. ts & VUE3
	1. B站: BV1ra4y1H7ih
	2. 学习component、router、数据绑定等
	3. 注意结合webpack理解
5. elementui
	1. 官网: https://element-plus.gitee.io

Python是一种广泛使用的高级编程语言，以其简洁的语法、易于阅读的代码和丰富的标准库而受到开发者喜爱。Python适用于多种应用领域，如Web开发、数据分析、人工智能等。Python拥有庞大的社区支持，因而有许多第三方库可供选择，大大丰富了Python的功能。

Scikit-learn（简称sklearn）是一个基于Python的开源机器学习库。它提供了一系列简单且高效的工具，用于数据挖掘、数据分析和机器学习任务。Scikit-learn内置了许多常用的机器学习算法，如分类、回归、聚类、降维等。同时，它还提供了数据预处理、模型评估和参数调优等实用工具，使得机器学习开发更加便捷。

WebSocket 是基于TCP协议的通信方式，是一种双向通信协议，允许在客户端和服务器之间进行全双工通信。WebSocket通过一次握手建立持久连接，之后所有的数据交换都在这个连接上进行，减少了通信开销。WebSocket支持文本和二进制数据的传输，适用于实时交互和高性能的应用场景。WebSocket的缺点是其相对较新，不是所有浏览器和服务器都完全支持。

开发工具简介：
本课程推荐使用 Visual Studio Code 进行代码编写。也可根据个人习惯使用 pycharm、webstorm 等工具，但在此不做教学。

Visual Studio Code（简称VSCode）是一款免费、开源的代码编辑器，由微软开发。它支持多种编程语言和平台，具有强大的代码编辑、调试、版本控制和扩展插件功能。VSCode提供了许多内置功能，如语法高亮、代码折叠、智能代码补全等，同时还能通过安装插件来扩展其功能。
对于本课程中的前后端开发，我们需要安装以下插件：
1.	Vetur - Vue.js插件： Vetur是一个专为Vue.js开发者提供的VSCode插件。它提供了诸如语法高亮、代码段补全、错误检查、格式化等功能，以提高Vue.js项目的开发效率。安装Vetur后，VSCode将能够更好地识别Vue.js项目的结构和语法。
2.	Python插件：Python插件为VSCode提供了Python开发所需的功能和支持，如代码补全、代码导航、调试、单元测试、代码重构等。安装Python插件后，VSCode将能够更好地支持Python语言的开发，提高后端代码的编写效率。
安装插件的步骤如下：
1.	打开VSCode。
2.	点击左侧边栏中的扩展图标（Extensions，一个方形的图标）。
3.	在搜索框中输入插件名称（如Vetur或Python），然后从搜索结果中找到对应的插件。
4.	点击插件旁边的“Install”按钮进行安装。
5.	安装完成后，按照插件的文档进行配置和使用。
通过安装这些插件，VSCode将能够更好地支持本课程中的前后端开发，帮助学生更高效地完成项目实践。
